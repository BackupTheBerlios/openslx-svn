#!/bin/sh
#
# This script transforms the openslx project files to debians
# binary package format .deb

dpkg_deb=`which dpkg-deb`
if [ -z "$dpkg_deb" ];then 
    echo "You need the program dpkg-deb (contained in package dpkg) to build a debian package"
    exit
fi

# change into folder where we expect the Makefile:
cd $(dirname $(readlink -f $0))/../..
if [ ! -e ./Makefile ]; then
    echo "There is no makefile in this programs directory (`pwd`)."
    echo "Please run this script only embedded in the context of an openslx checkout."
    exit
fi

export SLX_BUILD_PATH=/tmp/slx$$
mkdir -p $SLX_BUILD_PATH
# "make install" will install the slx software into $SLX_BUILD_PATH
if make install; then
  #Create Temporary working directory
  mkdir -p $SLX_BUILD_PATH/DEBIAN
  mkdir -p $SLX_BUILD_PATH/usr/share/man/man1
  cp packaging/dpkg/default_files/control  $SLX_BUILD_PATH/DEBIAN/
  cp packaging/dpkg/default_files/prerm    $SLX_BUILD_PATH/DEBIAN/
  cp packaging/dpkg/default_files/postinst $SLX_BUILD_PATH/DEBIAN/
  cp packaging/dpkg/default_files/*.1 $SLX_BUILD_PATH/usr/share/man/man1/
  gzip -9 $SLX_BUILD_PATH/usr/share/man/man1/*

  #Set permissions
  find $SLX_BUILD_PATH -type d|xargs chmod 755

  #Create the package
  dpkg-deb --build $SLX_BUILD_PATH > /dev/null
  . ./VERSIONS
  cd packaging/dpkg
  mv $SLX_BUILD_PATH.deb openslx_$OPENSLX_VERSION_STRING.deb
  echo "Written 'openslx_$OPENSLX_VERSION_STRING.deb':"
  ls -lh openslx_$OPENSLX_VERSION_STRING.deb
fi
#Clean up
rm -rf $SLX_BUILD_PATH
