# Copyright (c) 2003..2006 - RZ Uni Freiburg
# Copyright (c) 2007..2008 - OpenSLX GmbH
#
# This program is free software distributed under the GPL version 2.
# See http://openslx.org/COPYING
#
# If you have any feedback please consult http://openslx.org/feedback and
# send your feedback to feedback@openslx.org
#
# General information about OpenSLX can be found at http://openslx.org
#
# Configuration script for general Debian distributions to setup linux
# stateless clients (included within initial ramfs)

# distro specific configuration variables used in the setup functions
# (formerly done via config-*, these variables are disputable ...)
# D_ETCEXCL - list of files, wildcards to be excluded from /etc when using 
# bind mounts
# D_DIRINBINDMNT - lists of directories to be created in bind mounted rw part
# of the client filesystem
# D_RODIRSINRW - ReadOnly Directories in RW part of filesystem to save on 
# TempFS usage
# D_DIRINDXS - directories in client filesystem which should be present anyhow
D_ETCEXCL="etc/gconf/*\n*.old\n*-\n\
etc/autoinstall\nlogrotate*\nbootloader\n*~\n\
pptp.d\nisdn\nyouservers\nhardware/hwcfg*\n\
X11/xdm/pixmaps\ndhclient.script"
D_BINDMPTS="tmp root home"
D_DIRINBINDMNT="/var/run /var/log /var/tmp /var/lib/gdm /etc/X11"
D_RODIRSINRW="etc/gconf etc/X11/xkb /var/lib/texmf /var/lib/dpkg"
D_DIRINDXS="/var/X11R6/compose-cache \
/var/run/sysconfig/tmp /var/adm /var/lib/rpm /var/lib/nobody \
/var/lib/pam_devperm /var/lib/bluetooth \
/var/lib/texmf /var/lib/nfs/sm \
/var/lib/misc /var/lib/acpi /var/spool/cron \
/var/lock/subsys/sysconfig"

# empty functions are defined at the beginning of /etc/functions

# distro specific stuff to initialize
preinit () {
  echo "Creating dhcp user"
  echo "dhcp:x:101:" >>/etc/group
  echo "dhcp:x:101:101::/nonexistent:/bin/false" >>/etc/passwd
}

# distro specific function called from servconfig script
config_distro () {
  # add the halt link to the 0 and 6 runlevel directories
  ln -sf ../init.d/halt /mnt/etc/rc0.d/S90halt
  ln -sf ../init.d/reboot /mnt/etc/rc6.d/S90reboot
 
  # remove annoying udev rule set for changing eth interface
  # fixme: not that simple, see ticket 187
  #rm /mnt/etc/udev/rules.d/*persistent-net.rules >/dev/null 2>&1
 
  # set default runlevel
  sed -e "s/.*initdefault/id:${D_INITDEFAULT}:initdefault/" -i /mnt/etc/inittab
}

# initial (boot time) runlevel scripts
initial_boot () {
local count=10
# boot.slx is a special runlevel script generated within initialramfs which
# should be executed before the normal runlevel scripts. Proper shutdown is
# not needed!?
for i in boot.slx mountkernfs.sh mountvirtfs udev procps.sh bootlogd \
    $D_SPLASHY keymap.sh hwclock.sh sudo dbus-1; do
  count=$(($count + 1))
  echo "boot-runlevelscript $i"
  ln -sf /etc/init.d/$i /mnt/etc/rcS.d/S${count}$i
done
}

# linking runlevel scripts
rllinker () {
local script="$1"
local start="$2"
local stop="$3"
# empty runlevel links - decision on running certain services is
# passed via configuration
for i in rc2.d/K$stop$script rc3.d/K$stop$script \
         rc2.d/S$start$script rc3.d/S$start$script ; do
  if ! [ -f /mnt/etc/init.d/$script ]; then
    echo "Target `pwd`../$script does not exist. Skipping links"
    break
  else 
    ln -sf ../init.d/$script /mnt/etc/$i
    echo "Linked $script"
  fi
done
}

# make a runlevel script
d_mkrlscript () {
local switch=$1
local name=$2
local info=$3
case "$1" in
  init)
    echo -e "#!/bin/sh\n# skeleton of /etc/${D_INITDIR}/$name created \
by $0\n# after you applied changes to the creation scripts you have to \
rerun\n# the mkdxsinitrd script to get them applied\n\
. /lib/lsb/init-functions\ncase \"\$1\" in\n    start)\n\
\tlog_begin_msg \"$info\"" >>/mnt/etc/${D_INITDIR}/$name
    chmod u+x /mnt/etc/${D_INITDIR}/$name
  ;;
  close)
    echo -e "\tlog_end_msg \$?\n\t;;\n    stop)\n\tlog_end_msg \$?\n\t;;\
      \nesac\nexit 0" >>/mnt/etc/${D_INITDIR}/$name
  ;;
esac
}

# group of functions for the normal runlevels - first parameter is start
# second stop
# function for ntp configuration
config_ntp () {
if [ -f /mnt/etc/init.d/ntp -a "x$start_ntp" != "xno" ] ; then
  echo -e "ntp:x:74:65534:NTP daemon:/var/lib/ntp:/bin/false" \
    >>/mnt/etc/passwd
  testmkd /mnt/var/lib/ntp/var/run/ntp
  rllinker "ntp" "07" "14"
fi
}

# function for atd
config_atd () {
if [ "x$start_atd" = "xyes" ]; then
  # fixme!! needed? Fix permissions
  #testmkd /mnt/var/spool/cron/atjobs
  #testmkd /mnt/var/spool/cron/atspool
  #chown /mnt/var/spool/cron/atjobs /mnt/var/spool/cron/atspool
  rllinker "atd" "89" "01"
fi
}

# function for configuration of cron services
config_cron () {
if [ "x$start_cron" = "xyes" ] ; then
  if [ -f /mnt/etc/init.d/cron ] ; then
    rllinker "cron" "89" "01"
    testmkd /mnt/var/spool/cron/crontabs
    echo -e "# /etc/crontab - file generated by $0:\n\
#\t$date\nSHELL=/bin/sh\nPATH=/usr/bin:/usr/sbin:/sbin:/bin:/usr/lib/news/bin\
\nMAILTO=\n-*/15 * * * *\troot\ttest -x /usr/lib/cron/run-crons && \
/usr/lib/cron/run-crons >/dev/null 2>&1\n" >/mnt/etc/crontab
  else
    error "$df_errcron" nonfatal
  fi 
fi
}

# syslog service
config_syslog () {
if [ "x$start_syslog" != "xno" ] ; then
  : # fixme: Evtl. Verzweigung fuer syslog/-ng Varianten, siehe Ubuntu
    # bzw. SuSE
fi
}

# secure shell service
config_sshd () {
if [ "x$start_sshd" = "xyes" ] ; then
  if [ -f /mnt/etc/init.d/ssh ] ; then
    rllinker "ssh" "20" "02"
  fi
fi
}

# snmp agent for remote monitoring
config_snmp () {
if [ "x$start_snmp" = "xyes" ] ; then
  if [ -f /mnt/etc/init.d/snmpd ] ; then
    rllinker "snmpd" "30" "03"
    testmkd /mnt/var/lib/net-snmp >/dev/null 2>&1
  fi
    # fixme!!
    # write service monitor depending on services started
  fi
}

# add special path /var/X11R6/bin to the PATH variable
# fixme!! add path directly to /etc/profile!?
#[ "x$addpath" != "x" ] && \
#  echo -e "# added path component by $0: $date\n\
#PATH=\"\$PATH:/var/X11R6/bin\"" >>/mnt/etc/profile
}

# consolefont and language
consolefont () {
# console font setting program not available in Debian 4!?
echo -e "\t#setfont ${CONSOLE_FONT} >${LOGFILE} 2>&1" \
  >>/mnt/etc/${D_INITDIR}/boot.slx
chmod 744 /mnt/etc/${D_INITDIR}/boot.slx
# fixme!! check for proper operation
# sed -e "s,LANGUAGE=.*,LANGUAGE=\"${LANG}\" # set within initramfs," \
#     -e "s,LANG=.*,LANG=\"${LANG}\" # set within initramfs," \
#     -i /mnt/etc/environment
sed -e "s,LANG=.*,LANG=\"${LANG}\" # set within initramfs," \
    -i /mnt/etc/default/locale
}

# configure hal, dbus, resmgr and services like that
config_dreshal () {
if [ "x$start_dreshal" = "xyes" ]; then
  :
fi
}

