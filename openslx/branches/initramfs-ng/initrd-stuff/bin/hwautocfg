#!/bin/ash
# Copyright (c) 2003..2006 - RZ Uni Freiburg
# Copyright (c) 2006..2008 - OpenSLX GmbH
#
# This program is free software distributed under the GPL version 2.
# See http://openslx.org/COPYING
#
# If you have any feedback please consult http://openslx.org/feedback and
# send your feedback to feedback@openslx.org
#
# General information about OpenSLX can be found under http://openslx.org
#
# Universal (distro independent) hardware autoconfiguration script for 
# OpenSLX linux stateless clients, using hwconfig from knoppix as base tool 

#############################################################################
# pre part, load USB modules and start hardware detection pci and monitor
base () {
echo "0 0 0 0" >/proc/sys/kernel/printk
hwinfo --usb-ctrl --netcard | grep modprobe | grep -v ehci | \
  sed 's/.* Cmd: "//;s/"//' | sort -u >/etc/modprobe.base
ash /etc/modprobe.base; mdev -s
( hwinfo --pci | grep modprobe | sed 's/.* Cmd: "//;s/"//' \
  >/etc/modprobe.pci ) &
return 0
}

#############################################################################
# main part
hwmain () {
ash /etc/modprobe.pci

# load kernel module for ps2 mice
[ -f /lib/modules/${KERNEL}/kernel/drivers/input/mouse/psmouse.ko ] && \
  modprobe ${MODPRV} psmouse

# and map the mousehandler to /dev/input/mice
[ -f /lib/modules/${KERNEL}/kernel/drivers/input/mousedev.ko ] && \
  modprobe ${MODPRV} mousedev

hwinfo --disk | grep modprobe | sed 's/.* Cmd: "//;s/"//' \
  >/etc/modprobe.disk
[ $DEBUGLEVEL -eq 21 ] && echo "** finished 2nd hwdetection at $(sysup)"

# load IDE high level drivers
if [ -n "$ide" ] ; then
  # you might want to check /etc/sysconfig/floppy for more info
  strinfile "ZIP" /tmp/hwsetup.info && modprobe ${MODPRV} ide-floppy
  strinfile "CDROM" /tmp/hwsetup.info && modprobe ${MODPRV} ide-cd
  strinfile "HD" /tmp/hwsetup.info && {
    modprobe ${MODPRV} ide-disk
    disk=yes; }
fi

# not rather precise ...
if strinfile "SCSI" /tmp/hwsetup.info ; then
  strinfile "CDROM" /tmp/hwsetup.info && { modprobe ${MODPRV} sr_mod;
    modprobe ${MODPRV} sg;
    # just for compatibility to hwsetup (which generates links to scd*)
    ( waitfor /dev/sr0 1000 && for i in /dev/sr* ; do 
      [ -e /dev/scd${i#/dev/sr} ] || cp -a -f $i /dev/scd${i#/dev/sr} ; done; ) &
    }
  strinfile "HD" /tmp/hwsetup.info && {
    modprobe ${MODPRV} sd_mod
    disk=yes; }
  # check if a (scsi) scanner was detected
  strinfile "SCANNER" /tmp/hwsetup.info && \
    echo -e 'KERNEL=="sg*",\t\tNAME="%k", GROUP="disk", MODE="666"' \
           >> /tmp/scanner-udev
fi
[ -x /bin/mdev ] && mdev -s
# sound card setup (alsa and oss compatibility drivers)
( if [ -f /etc/sysconfig/sound ] ; then
  . /etc/sysconfig/sound
  driver=${DRIVER}
else driver="snd-dummy"
fi
# problem with a specific module not disabled (via above trick) when
# busybox is used
#  rmmod snd_atiixp_modem snd_atiixp
modprobe ${MODPRV} ${driver}
driverlist="${driverlist} ${driver}"
modprobe ${MODPRV} snd-pcm-oss
modprobe ${MODPRV} snd-mixer-oss
# remaining drivers listed in /tmp/hwsetup.info
cat /tmp/hwsetup.info| while read line ; do
  if strinstr "driver:" "${line}"; then
    driver=${line##driver: }
    if ! strinstr " ${driver} " "${driverlist}"; then
      strinstr "Card:" "${driver}" || strinstr "ps/2" "${driver}" || {
        modprobe ${MODPRV} ${driver} &
        usleep 5000; }
      driverlist="${driverlist} ${driver}"
    fi
  fi
done ) &
[ $DEBUGLEVEL -eq 21 ] && echo "** finished most of module loading at $(sysup)"

# get idea of availabe harddisk partitions, put swap partitions into
# (/mnt)/etc/fstab and format and mount partitions of type 44 (unknown)
[ $DEBUGLEVEL -eq 21 ] && echo "** starting hdd stuff at $(sysup)"
if [ "${disk}" = "yes" ] ; then
for hd in $(cat /tmp/hwsetup.info|sed -n -e '/HD$/,/device:/p'| \
    sed -n -e '/device:/p'|sed -e 's/device: //') ; do
  /mnt/sbin/fdisk -l /dev/$hd|sed -n "/^\/dev\//p" > /tmp/hd_part
  for hdpartnr in $(cat /tmp/hd_part | \
      sed -n -e "/ 82 /p"|sed -e "s/[[:space:]].*//") ; do
    echo -e "$hdpartnr\tswap\t\tswap\t\tdefaults\t 0 0" >> /tmp/fstab
  done
  # we use special non assigned partition type (id44) for harddisk scratch 
  # space, thus no normal filesystem will be incidentally deleted or
  # corrupted
  for hdpartnr in $(cat /tmp/hd_part | \
        sed -n -e "/ 44 /p"|sed -e "s/[[:space:]].*//") ; do
    # check for supported filesystem and formatter
    ( if diskfm $hdpartnr ; then
        echo "$hdpartnr is mounted to /mnt/tmp at $(sysup)" > /tmp/tmpready
        echo -e "$hdpartnr\t/tmp\t\tauto\t\tdefaults\t 0 0" >> /tmp/fstab
      else
        echo "formatting failed for some reason ($(sysup))" > /tmp/tmpready
      fi ) &
    part44=yes
    break
  done
  # put detected linux partitions into /etc/fstab with "noauto"
  for hdpartnr in $(cat /tmp/hd_part | \
        sed -n -e "/ 83 /p"|sed -e "s/[[:space:]].*//") ; do
    mkdir -p /mnt/media/${hdpartnr#/dev/*} 2>/dev/null
    echo -e "$hdpartnr\t/media/${hdpartnr#/dev/*}\tauto\t\tnoauto,\
noexec\t 0 0" >> /tmp/fstab
  done 
done
# determine if tmp preparation should wait for format/mount or not
[ -z "$part44" ] && echo "finished at $(sysup)" > /tmp/tmpready
else
  echo "no disk found ( $(sysup) )" > /tmp/tmpready
fi
[ $DEBUGLEVEL -eq 21 ] && echo "** finished hdd stuff at $(sysup)"

# configure some variables from configuration file - wait for dhcp or ldap
# confiurator to complete
cfgcomplete
. /etc/machine-setup
[ $DEBUGLEVEL -eq 21 ] && echo "** finished waiting for config at $(sysup)"

# set X11 configuration file
D_XF86CONFFILE="/mnt/etc/X11/xorg.conf"

# finish Xorg configuration if no xorg.conf file was provided by ConfigTGZ 
# (check for /rootfs/${D_XF86CONFFILE#/mnt})
if [ ! -f /rootfs${D_XF86CONFFILE#/mnt} ] ; then 
  xfc="/tmp/xorg.conf"
  . /etc/sysconfig/xserver >/dev/null 2>&1 || error "${hcfg_hwsetup}" nonfatal
  # replace OSS 3D server with proprietary one
  checkgraphix
  sed -e "s/\"vesa\"/\"${XMODULE}\"/" -i $xfc
  # check for 64bit CPU/installation (fixme!!)
  [ -d "/mnt/usr/X11R6/lib64/modules" ] && \
    sed -e "/Section \"Files\"/a\ \ ModulePath    \"/usr/X11R6/lib64/modules\"" \
     -i $xfc
  # run localizator and configure X11 keyboard
  localization "${country}"
  if [ -z "${XKEYBOARD}" ] ; then
    XKEYBOARD="us"
    error "${xcfg_keyb}" nonfatal
  fi
  sed "s/XKEYBOARD/${XKEYBOARD}/" -i $xfc
  # check for kind of xorg module used and patch the i8,9XX VGA BIOS if needed
  if strinfile '"i810"' $xfc && [ -f /tmp/res ] ; then
    highres=$(sort -run /tmp/res|grep -i x -m 1)
    915resolution -l|sed -n "s/Mode //;/32 bits/p" > /tmp/915res
    strinfile ${highres} /tmp/915res || {
      915resolution $(grep -i x -m 1 /tmp/915res|sed "s/\ :.*//") $(echo \
        $highres|sed "s/x/\ /") 2>&1 >/dev/null;
      # for some reason the above does not work for a Dell laptop with Intel 
      # 855 chipset, so add another mode too
      915resolution 3c $(echo $highres|sed "s/x/\ /") 2>&1 >/dev/null; }
  fi
fi

# if any new device appeared up to now
if [ -x /bin/mdev ] ; then
  mdev -s &
  testmkd /dev/input 
  mknod /dev/input/mice c 13 63 2>/dev/null
fi
return 0
}

#############################################################################
# main script starts here

# functions common for all distros
. /etc/functions
# functions common for all distros, messages contains all error and
# info output
. /etc/messages
# load distro specific configuration variables and functions. distro
# specific functions may overwrite functions defined in /etc/functions
. /etc/distro-functions

# script run timer
[ $DEBUGLEVEL -eq 8 -o $DEBUGLEVEL -eq 21 ] && \
  echo "** HW $1 setup started at $(sysup)"

# heavy debugging output in level 3 and above and specific for 11
[ $DEBUGLEVEL -gt 3 -a $DEBUGLEVEL -lt 8 -o $DEBUGLEVEL -eq 11 ] && \
  set -x

case $1 in
  # pre initialization: loading USB base and network adaptor modules,
  # detection of other pci bus modules
  base)
    base
  ;;
  # main part of hardware setup including Xorg
  main)
    hwmain
    # main script run timer or debug information
    [ $DEBUGLEVEL -eq 8 -o $DEBUGLEVEL -eq 21 ] && \
      echo "** HW setup finished at $(sysup)"
    echo "hwsetup finished at $(sysup)" > /tmp/hwcfg
  ;;
esac
