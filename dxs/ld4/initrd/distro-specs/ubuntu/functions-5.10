# Description:  configuration script for Ubuntu V5.10 to configure
#		linux diskless clients (executed within initial
#		ramdisk after genconfig) 
#
# Author(s):    Dirk von Suchodoletz <dirk@goe.net>, 29-01-2006
#		Nico Dietrich
#		Felix Endres
#
# Copyright:    (c) 2006 - RZ Universitaet Freiburg
# 
# Version:      0.2.1b

# distro specific stuff to initialize
preinit () {
  echo "dhcp:x:101:">>/etc/group
  echo "dhcp:x:101:101::/nonexistent:/bin/false">>/etc/passwd

  # load unix module to provide sockets
  modprobe ${MODPRV} unix || error " Failed to load the \"unix\" module. \
  Problems with Hardware detection will probably arise"
}
# AUS SuSE-9.3
# udev/hotplug - auto device discovery service
udev_hotplug () {
local result=0
[ -d /etc/hotplug -a -d /etc/hotplug.d ] || error "  Hotplug subdirectory \
is missing! udev(d) might not work as expected." nonfatal
echo "Enabling hotplug/udev"
udevstart || result=1
udevd -d || result=1
return $result
}

## udev service
#udev_hotplug () {
#local result=0
#echo "Starting udev"
#udevstart || result=1
#if [ -x /bin/udevd ] ; then
#  export UDEVD_EXPECTED_SEQNUM=$(cat /sys/kernel/hotplug_seqnum)
#  export UDEVD_EVENT_TIMEOUT=1
#  echo "" > /proc/sys/kernel/hotplug
#  udevd --daemon || result=1
#else error "  udev daemon is not available. Some devices might not \
#apprear." nonfatal
#fi
#return $result
#}

# linking runlevel scripts
rllinker () {
local script="$1"
local start="$2"
local stop="$3"
# empty runlevel links - decision on running certain services is
# passed via configuration
for i in rc3.d/K$stop$script rc5.d/K$stop$script \
         rc3.d/S$start$script rc5.d/S$start$script ; do
  ln -sf ../$script /mnt/etc/init.d/$i
  echo "Linked $script"
done
}

# group of functions for the normal runlevels - first parameter is start
# second stop
# function for ntp configuration
config_ntp () {
local start=07
local stop=14
if [ -f /mnt/etc/init.d/ntp ] ; then
  echo -e "ntp:x:74:65534:NTP daemon:/var/lib/ntp:/bin/false" \
    >>/mnt/etc/passwd
  testmkd /mnt/var/lib/ntp/var/run/ntp &>/dev/null
  if [ "x$start_ntp" = "xinitial" ] ; then
    echo -e "# entry added by $0: $date" \
      >>/mnt/etc/${D_INITDIR}/boot.ld
    echo "ntpdate -s -b $ntp_servers >${LOGFILE} 2>&1 &" \
      >>/mnt/etc/${D_INITDIR}/boot.ld
  else
    rllinker "ntp" "$start" "$stop"
  fi
fi
}

# function for atd
config_atd () {
if [ "x$start_atd" = "xyes" ]; then
  rllinker "atd" "14" "04"
fi
}

# function for configuration of cron services
config_cron () {
if [ "x$start_cron" = "xyes" ] ; then
  if [ -f /mnt/etc/init.d/cron ] ; then
    testmkd /mnt/var/spool/cron/lastrun
    testmkd /mnt/var/spool/cron/tabs
    echo -e "# /etc/crontab - file generated by $0:\n\
#\t$date\nSHELL=/bin/sh\nPATH=/usr/bin:/usr/sbin:/sbin:/bin:/usr/lib/news/bin\
\nMAILTO=\n-*/15 * * * *\troot\ttest -x /usr/lib/cron/run-crons && \
/usr/lib/cron/run-crons >/dev/null 2>&1\n" >/mnt/etc/crontab
  else
    error "  The cron start script seems not to be installed, so requesting \
\n  the start of cron services make no sense." nonfatal
  fi 
fi
}

# syslog service
config_syslog () {
if [ "x$start_syslog" = "xyes" ] ; then
  echo >/dev/null
fi
}

# secure shell service
config_sshd () {
if [ "x$start_sshd" = "xyes" ] ; then
  if [ -f /mnt/etc/init.d/sshd ] ; then
    testmkd /mnt/var/lib/sshd; testmkd /mnt/var/lib/empty
    rllinker "sshd" "12" "10"
  fi
fi
}

# snmp agent for remote monitoring
config_snmp () {
if [ "x$start_snmp" = "xyes" ] ; then
  if [ -f /mnt/etc/init.d/snmpd ] ; then
    rllinker "snmpd" "24" "02"
    testmkd /mnt/var/lib/net-snmp >/dev/null 2>&1
  fi
    # fixme!!
    # write service monitor depending on services started
  fi
}

# x11 stuff
descsession () {
if [ "x$desktop_session" != "x" ] ; then
  windowmanagers="$desktop_session"
  # write script for desktop-session chooser
  if [ "x$vmware" != "xno" ] ; then
    debug=""
    [ ${DEBUGLEVEL} -gt 0 ] && debug="--debug 1"
    echo -e "#!/bin/sh\n#\n# file generated by\n#\t$0:\n#\t$date\n
OSTYPE=\`echo \$0 | sed -e \"s,-, ,\" -e \"s,.*/,,\" | awk '{print \$1}'\`
SPECTYPE=\`echo \$0 | sed -e \"s,-, ,\" -e \"s,.*/,,\" | awk '{print \$2}'\`\n
OPTS=\"-o \$OSTYPE \${SPECTYPE:+\"-s \$SPECTYPE\"}\"\n
xterm -bg black -fg white -geometry 170x30+0-0 +sb \
-e \"runvmware \$OPTS $debug\"\n" > /mnt/var/X11R6/bin/desktop-session
    chmod a+x /mnt/var/X11R6/bin/desktop-session
    addpath="true";
  fi
else
  windowmanagers="kde,gnome,icewm,failsafe"
fi
# check if /usr/X11R6/bin is writeable, else use /var/X11R6/bin
if [ -w /mnt/usr/X11R6/bin/WM-Session ] ; then
  sesspath="/usr/X11R6/bin"
else
  sesspath="/var/X11R6/bin"
  addpath="true"
fi

# create links to desktop-session chooser
[ -f /mnt/usr/bin/X11/wmlist ] && wmlist=`cat /mnt/usr/bin/X11/wmlist`

for i in `echo $windowmanagers|sed -e "s/,/ /g"` ; do
  # beware!! quickhack for VMware sessions
  strinstr "$i" "$wmlist" || \
    test -x /mnt/usr/X11R6/bin/$i || \
    echo -e "[Desktop Entry]\nX-SuSE-translate=true\nEncoding=UTF-8\n\
Type=XSession\nExec=$i\nTryExec=$sesspath/$i\n\
Name=$i\n" > /mnt/etc/X11/sessions/$i.desktop
  # does not work correctly (add /var/X11R6/bin to path!!)
  test -x /mnt/usr/X11R6/bin/$i || \
    ln -fs /var/X11R6/bin/desktop-session /mnt/$sesspath/$i
done

# add special path /var/X11R6/bin to the PATH variable
[ "x$addpath" != "x" ] && \
  echo -e "# added path component by $0: $date\n\
PATH=\"\$PATH:/var/X11R6/bin\"" >>/mnt/etc/profile

}

# configure display manager (runlevel links and kind of manager)
config_dm () {
  # should be stated that entries were made (fixmee how??)
  #sed -e "s,DISPLAYMANAGER=.*,DISPLAYMANAGER=\"$start_xdmcp\"," \
  #    -e "s,.*_XSERVER.*,DISPLAYMANAGER_STARTS_XSERVER=\"$dsx\"," \
  #  /mnt/etc/sysconfig/displaymanager > /etc/displaymanager
  #cp /etc/displaymanager /mnt/etc/sysconfig/displaymanager
  # fixme - different runlevel scripts for diff. displaymanager??
  echo -e "\t/etc/init.d/xdm start >${LOGFILE} 2>&1\n" \
    >>/mnt/etc/${D_INITDIR}/boot.ld
  ln -sf /etc/init.d/xdm /mnt/etc/init.d/rc5.d/S01xdm
  ln -sf /etc/init.d/xdm /mnt/etc/init.d/rc5.d/K20xdm
}

# consolefont
consolefont () {
echo -e "setfont ${CONSOLE_FONT} >${LOGFILE} 2>&1" \
  >>/mnt/etc/${D_INITDIR}/boot.ld
}

# acpi and powersave
config_acpi () {
  :
}

# configure xdm as display manager
config_xdm () {
  :
} 

# configure gdm as display manager
config_gdm () {
  :
}

# configure kdm as display manager
config_kdm () {
  :
}

# configure hal, dbus, resmgr and services like that
config_dreshal () {
if [ "x$start_dreshal" = "xyes" ]; then
  :
fi
}

# configure bluetooth services
config_bt () {
:
}

# initialize boot.ld - skript to be executed during early system startup
# (before most of the normal boot init scripts)
# this script should operate like a normal runlevel script (fixme!!)
d_mkbootld () {
case "$1" in
  init)
    echo -e "#!/bin/sh\n# skeleton of /etc/${D_INITDIR}/boot.ld written \
from $0" >/mnt/etc/${D_INITDIR}/boot.ld
    echo -e '\n\ncase "$1" in\n    start)' \
      >>/mnt/etc/${D_INITDIR}/boot.ld
    echo -e '\techo -n "Running post configuration required by initrd"' \
      >>/mnt/etc/${D_INITDIR}/boot.ld
    chmod u+x /mnt/etc/${D_INITDIR}/boot.ld
  ;;
  close)
    echo -e "\t;;\n    stop)\n\t;;\nesac\nexit 0" \
      >>/mnt/etc/${D_INITDIR}/boot.ld

  ;;
esac
}

# start name service caching daemon
config_nscd () {
:
}

# configure automounter
config_automount () {
if [ -f /mnt/etc/init.d/autofs ] ; then
  testmkd /var/lock/subsys
  echo -e "# /etc/auto.master - file generated by $0:\n\
/misc\t/etc/auto.misc" >/mnt/etc/auto.master
  echo -e "# /etc/auto.misc - file generated by $0:\n" \
    > /mnt/etc/auto.misc
  if [ -n "${automnt_src}" ] ; then
    # local directory and home directory server from machine-setup
    [ -z "${automnt_dir}" ] && automnt_dir="/home"
    strinstr "/" "${automnt_dir}" && error "  Only toplevel directories \
are allowed as mount points for user home\n  directories. Please set the \
variable \${automnt_dir} appropriately in\n  machine-setup file." nonfatal
    automnt_dir=${automnt_dir#/}
    echo -e "/home\t/etc/auto.${automnt_dir}\n" >> /mnt/etc/auto.master
    echo -e "# /etc/auto.${automnt_dir} created by $0:\n" \
      > /mnt/etc/auto.${automnt_dir}
    echo -e "*\t-rsize=32768,wsize=32768,rw\t${automnt_src}/&" \
      >> /mnt/etc/auto.${automnt_dir}
  fi
  echo -e "# /etc/sysconfig/autofs - file modified by\n#\t$0:\n#" \
    > /etc/autofs
  sed -e "s,AUTOFS_OPTIONS.*,AUTOFS_OPTIONS=\"--timeout 3\"," \
    /mnt/etc/sysconfig/autofs >> /etc/autofs
  cp /etc/autofs /mnt/etc/sysconfig/autofs
  config_portmap
  rllinker "autofs" "18" "04"
fi
}
