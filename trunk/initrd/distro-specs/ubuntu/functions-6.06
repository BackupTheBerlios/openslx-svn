# Description:  configuration script for Debian 3.1 to configure
#		linux diskless clients (executed within initial
#		ramdisk after genconfig) 
#
# Author(s):    Dirk von Suchodoletz <dirk@goe.net>, 18-05-2006
#		Felix Endres, 30-04-2006
#		Tobias Maier
#
# Copyright:    (c) 2006 - RZ Universitaet Freiburg
# 
# Version:      0.2.1d

# distro specific stuff to initialize
preinit () {
  echo "Creating dhcp user"
  echo "dhcp:x:101:" >>/etc/group
  echo "dhcp:x:101:101::/nonexistent:/bin/false" >>/etc/passwd
  # mount/unionfs can not handle the nfsro parameter in Ubuntu 6.06 
  NFSRO=""
}

# distro specific function called from servconfig script

# AUS SuSE-9.3
# udev/hotplug - auto device discovery service
# Result: 1 is bad, 0 is good
udev_hotplug () {
#  local result=0
#  [ -d /etc/hotplug -a -d /etc/hotplug.d ] || error "$df_errhotpl" nonfatal
#  echo "Enabling hotplug/udev"
#  #udevstart && result=0
#  #udevtrigger && result=0
#  udevd --daemon || result=1
#  [ ! -e /sbin/udevsend ] && result=1
#  echo "/sbin/udevsend/" > /proc/sys/kernel/hotplug
#  mkdir -p /dev/.udev/db /dev/.udev/queue
#  trigger_device_events
#  return $result
:
}



# function for atd
config_atd () {
if [ "x$start_atd" = "xyes" ]; then
  # fixme!! needed? Fix permissions
  #testmkd /mnt/var/spool/cron/atjobs
  #testmkd /mnt/var/spool/cron/atspool
  #chown /mnt/var/spool/cron/atjobs /mnt/var/spool/cron/atspool
  rllinker "atd" "89" "01"
fi
}

# function for configuration of cron services
config_cron () {
if [ "x$start_cron" = "xyes" ] ; then
  if [ -f /mnt/etc/init.d/cron ] ; then
    rllinker "cron" "89" "01"
    testmkd /mnt/var/spool/cron/crontabs
    echo -e "# /etc/crontab - file generated by $0:\n\
#\t$date\nSHELL=/bin/sh\nPATH=/usr/bin:/usr/sbin:/sbin:/bin:/usr/lib/news/bin\
\nMAILTO=\n-*/15 * * * *\troot\ttest -x /usr/lib/cron/run-crons && \
/usr/lib/cron/run-crons >/dev/null 2>&1\n" >/mnt/etc/crontab
  else
    error "$df_errcron" nonfatal
  fi 
fi
}


# secure shell service
config_sshd () {
if [ "x$start_sshd" = "xyes" ] ; then
  if [ -f /mnt/etc/init.d/ssh ] ; then
    rllinker "ssh" "20" "02"
  fi
fi
}

# snmp agent for remote monitoring
config_snmp () {
if [ "x$start_snmp" = "xyes" ] ; then
  if [ -f /mnt/etc/init.d/snmpd ] ; then
    rllinker "snmpd" "30" "03"
    testmkd /mnt/var/lib/net-snmp >/dev/null 2>&1
  fi
    # fixme!!
    # write service monitor depending on services started
  fi
}

# x11 stuff
descsession () {
if [ "x$desktop_session" != "x" ] ; then
  windowmanagers="$desktop_session"
  # write script for desktop-session chooser
  if [ "x$vmware" != "xno" ] ; then
    debug=""
    [ ${DEBUGLEVEL} -gt 0 ] && debug="--debug 1"
    echo -e "#!/bin/sh\n#\n# file generated by\n#\t$0:\n#\t$date\n
OSTYPE=\`echo \$0 | sed -e \"s,-, ,\" -e \"s,.*/,,\" | awk '{print \$1}'\`
SPECTYPE=\`echo \$0 | sed -e \"s,-, ,\" -e \"s,.*/,,\" | awk '{print \$2}'\`\n
OPTS=\"-o \$OSTYPE \${SPECTYPE:+\"-s \$SPECTYPE\"}\"\n
xterm -bg black -fg white -geometry 170x30+0-0 +sb \
-e \"runvmware \$OPTS $debug\"\n" > /mnt/var/X11R6/bin/desktop-session
    chmod a+x /mnt/var/X11R6/bin/desktop-session
    addpath="true";
  fi
else
  windowmanagers="kde,gnome,icewm,failsafe"
fi
# check if /usr/X11R6/bin is writeable, else use /var/X11R6/bin
if [ -w /mnt/usr/X11R6/bin/WM-Session ] ; then
  sesspath="/usr/X11R6/bin"
else
  sesspath="/var/X11R6/bin"
  addpath="true"
fi

# create links to desktop-session chooser
[ -f /mnt/usr/bin/X11/wmlist ] && wmlist=`cat /mnt/usr/bin/X11/wmlist`

for i in `echo $windowmanagers|sed -e "s/,/ /g"` ; do
  # beware!! quickhack for VMware sessions
  strinstr "$i" "$wmlist" || \
    test -x /mnt/usr/X11R6/bin/$i || \
    echo -e "[Desktop Entry]\nX-SuSE-translate=true\nEncoding=UTF-8\n\
Type=XSession\nExec=$i\nTryExec=$sesspath/$i\n\
Name=$i\n" > /mnt/etc/X11/sessions/$i.desktop
  # does not work correctly (add /var/X11R6/bin to path!!)
  test -x /mnt/usr/X11R6/bin/$i || \
    ln -fs /var/X11R6/bin/desktop-session /mnt/$sesspath/$i
done

# add special path /var/X11R6/bin to the PATH variable
# fixme!! add path directly to /etc/profile!?
#[ "x$addpath" != "x" ] && \
#  echo -e "# added path component by $0: $date\n\
#PATH=\"\$PATH:/var/X11R6/bin\"" >>/mnt/etc/profile
}

# set up keytable (function run in hwautocfg)
keytable () {
# fixme -- use keytable setup script here
:
}

# consolefont and language
consolefont () {
# better change that in /etc/functions to UTF8 default
if [ "$LANG" == "de_DE@euro" ] ; then
  LANG=de_DE.UTF8
fi
sed -e "s,LANGUAGE=.*,LANGUAGE=${LANG}," \
    -e "s,LANG=.*,LANG=${LANG}," \
    -i /mnt/etc/environment

rllinker "console-screen.sh" "31" "03"
}

# configure gdm as display manager
config_gdm () {
rllinker "gdm" "13" "01"
ln -sf ../${D_INITDIR}/gdm /mnt/etc/rc3.d/K20gdm
#  ln -sf ../${D_INITDIR}/gdm /mnt/etc/rc3.d/S13gdm
#  ln -sf ../${D_INITDIR}/gdm /mnt/etc/rc6.d/K01gdm
  echo -e "\t/etc/${D_INITDIR}/gdm start >${LOGFILE} 2>&1\n\
    \t( sleep 120; ln -sf /etc/${D_INITDIR}/gdm /etc/rc3.d/S01gdm \
    >${LOGFILE} 2>&1) &\n" >>/mnt/etc/${D_INITDIR}/boot.ld
  # append gdm user
  echo "gdm:x:113:">>/etc/group
  echo "gdm:x:106:113:Gnome Display Manager" >> /etc/shadow

echo -e "# /etc/gdm/gdm.conf - file generated by $0\n\

[daemon]
AutomaticLoginEnable=false
AutomaticLogin=
TimedLoginEnable=false
TimedLogin=
TimedLoginDelay=30
Greeter=/usr/lib/gdm/gdmgreeter
DefaultPath=/usr/local/bin:/usr/local/sbin:/sbin:/usr/sbin:/bin:/usr/bin:/usr/bin/X11:/usr/games
RootPath=/usr/local/bin:/usr/local/sbin:/sbin:/usr/sbin:/bin:/usr/bin:/usr/bin/X11:/usr/games
User=gdm
Group=gdm
LogDir=/var/log/gdm
PidFile=/var/run/gdm.pid
PostLoginScriptDir=/etc/gdm/PostLogin/
PreSessionScriptDir=/etc/gdm/PreSession/
PostSessionScriptDir=/etc/gdm/PostSession/
DisplayInitDir=/etc/gdm/Init
XKeepsCrashing=/etc/gdm/XKeepsCrashing
RebootCommand=/sbin/shutdown -r now \"Rebooted from gdm menu.\"
HaltCommand=/sbin/shutdown -h now \"Halted from gdm menu.\"
SuspendCommand=/usr/sbin/pmi action sleep
HibernateCommand=/usr/sbin/pmi action hibernate
ServAuthDir=/var/lib/gdm
BaseXsession=/etc/gdm/Xsession
SessionDesktopDir=/etc/X11/sessions/:/etc/dm/Sessions/:/usr/share/gdm/BuiltInSessions/:/usr/share/xsessions/
DefaultSession=default.desktop
UserAuthDir=
UserAuthFBDir=/tmp
UserAuthFile=.Xauthority
StandardXServer=/usr/X11R6/bin/X
Xnest=/usr/X11R6/bin/Xnest -br -audit 0 -name Xnest
FirstVT=7
VTAllocation=true
SoundProgram=/usr/lib/gdmplay
[security]
AllowRoot=false
AllowRemoteRoot=false
AllowRemoteAutoLogin=false
RelaxPermissions=0
CheckDirOwner=true
DisallowTCP=true
[xdmcp]
Enable=false
[gui]
GtkTheme=Human
AllowGtkThemeChange=true
GtkThemesToAllow=Human,HighContrast,HighContrastInverse,LowContrast
[greeter]
ConfigAvailable=false
Browser=true
MinimalUID=1000
Exclude=bin,daemon,adm,lp,sync,shutdown,halt,mail,news,uucp,operator,nobody,gdm,postgres,pvm,rpm
IncludeAll=true
LocaleFile=/etc/gdm/locale.conf
SystemMenu=true
SecureSystemMenu=false
DefaultWelcome=true
DefaultRemoteWelcome=true
BackgroundColor=#523921
UseCirclesInEntry=true
GraphicalTheme=Human
GraphicalThemeDir=/usr/share/gdm/themes/
GraphicalThemeRand=false
SoundOnLogin=true
SoundOnLoginFile=/usr/share/sounds/question.wav
[chooser]
HostImageDir=/usr/share/hosts/
Hosts=
Broadcast=true
Multicast=false
[debug]
Enable=false
[servers]
0=Standard
[server-Standard]
name=Standard server
command=/usr/X11R6/bin/X -br -audit 0 
flexible=true
[server-Terminal]
name=Terminal server
command=/usr/X11R6/bin/X -br -audit 0 -terminate
flexible=false
handled=false
[server-Chooser]
name=Chooser server
command=/usr/X11R6/bin/X -br -audit 0
flexible=false
chooser=true

[debug]
Enable=$debug" >/mnt/etc/gdm/gdm.conf
if [ "x$start_x" = "xindirect" ] ; then
  # when X server consumes to much mem set X -terminate
  echo -e "\n[servers]\n0=Terminal -audit 0 -indirect \
$host_name\n\n\
[server-Terminal]\nname=Terminal server\ncommand=/usr/X11R6/bin/X \
-audit 0\n\
flexible=true\nhandled=true\nchooser=true" >>/mnt/etc/opt/gnome/gdm/gdm.conf
else
  echo -e "\n[servers]\n0=Standard\n\n\
[server-Standard]\nname=Standard server\ncommand=/usr/X11R6/bin/X\n\
flexible=true\nhandled=true" >>/mnt/etc/opt/gnome/gdm/gdm.conf
fi

}

config_automount () {
  rllinker "autofs" "19" "19"
}
