#!/bin/sh
#
# Kernel of a generic runlevel script file for use with OpenSLX diskless
# linux machines - script prepares vmware environment. Start and stop 
# functionality is added within initialramfs
#
# Michael Janczyk <mj0@uni-freiburg.de>, 15-04-2006
# Dirk von Suchodoletz <dirk@goe.net>, 03-09-2006
#
# (c) 2003, 2006 - RZ Universitaet Freiburg
#
# Version:      0.2.324
#
#######################################################################
# set verbose mode (set -x(v))
#set -xv

### CONFIGURATION #####################################################
# read configuration information
. /etc/machine-setup

### VARIABLES SECTION #################################################
# Declaration of default variables
vmdir=/var/lib/vmware

### START SCRIPT ######################################################

modprobe loop >/dev/null 2>&1

# device creation - the module does not trigger udev properly
for i in 0 1 2 3 4 5 6 7 8 9; do
  [ -c /dev/vmnet${i} ] || mknod /dev/vmnet${i} c 119 ${i};
done
chmod 0700 /dev/vmnet*

# loop file for exchanging information between linux and vmware guest
loopsrc=/etc/vmware/loopimg
loopdst=/etc/vmware/fd-loop
mkdir -p $loopsrc
grep "unionfs" /proc/mounts >/dev/null && \
  mount -o size=1500k -t tmpfs vm-loopimg $loopsrc
mkdir -p $loopdst
cp ${vmdir}/templ/fd0.img /$loopsrc/fd1.img
chmod a+rw /$loopsrc/fd1.img
mount -n -t msdos -o loop,umask=000 /$loopsrc/fd1.img $loopdst

# mount usbfs needed for vmware to detect usb devices
grep "/proc/bus/usb" /proc/mounts >/dev/null || \
  mount -t usbfs usbfs /proc/bus/usb

